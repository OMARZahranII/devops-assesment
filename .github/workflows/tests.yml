name: Run Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    # Add PostgreSQL service container
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: bdb
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Install dependencies
        run: go mod download
        
      # Create a test config file that points to the GitHub Actions PostgreSQL service
      - name: Create test config
        run: |
          cat > config/test.yaml << EOF
          app:
            versions:
              postgres: 1683195350
            environment: test
            host: 0.0.0.0
            port: "8080"
          postgres:
            host: localhost
            port: 5432
            database: bdb
            userName: test
            password: test
            sslMode: disable
            automigrate: true
          EOF
          
      # Set environment variable to use the test config
      - name: Run tests
        run: go test -v -cover ./...
        env:
          CONFIG_FILE: config/test.yaml
          # Direct database URL as fallback
          DATABASE_URL: postgres://test:test@localhost:5432/bdb

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.out
        if: success() 